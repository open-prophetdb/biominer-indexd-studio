"use strict";(self.webpackChunkbiominer_indexd_studio=self.webpackChunkbiominer_indexd_studio||[]).push([[2362],{1301:function(Q,P,j){j.d(P,{x:function(){return L}});var o=j(42761),f=j(75364);class S{constructor(){this.map=[]}add(n,i,r){I(this,n,i,r)}consume(n){if(this.map.sort((a,u)=>a[0]-u[0]),this.map.length===0)return;let i=this.map.length;const r=[];for(;i>0;)i-=1,r.push(n.slice(this.map[i][0]+this.map[i][1])),r.push(this.map[i][2]),n.length=this.map[i][0];r.push([...n]),n.length=0;let l=r.pop();for(;l;)n.push(...l),l=r.pop();this.map.length=0}}function I(t,n,i,r){let l=0;if(!(i===0&&r.length===0)){for(;l<t.map.length;){if(t.map[l][0]===n){t.map[l][1]+=i,t.map[l][2].push(...r);return}l+=1}t.map.push([n,i,r])}}function N(t,n){let i=!1;const r=[];for(;n<t.length;){const l=t[n];if(i){if(l[0]==="enter")l[1].type==="tableContent"&&r.push(t[n+1][1].type==="tableDelimiterMarker"?"left":"none");else if(l[1].type==="tableContent"){if(t[n-1][1].type==="tableDelimiterMarker"){const a=r.length-1;r[a]=r[a]==="left"?"center":"right"}}else if(l[1].type==="tableDelimiterRow")break}else l[0]==="enter"&&l[1].type==="tableDelimiterRow"&&(i=!0);n+=1}return r}const L={flow:{null:{tokenize:V,resolveAll:G}}};function V(t,n,i){const r=this;let l=0,a=0,u;return D;function D(e){let R=r.events.length-1;for(;R>-1;){const M=r.events[R][1].type;if(M==="lineEnding"||M==="linePrefix")R--;else break}const E=R>-1?r.events[R][1].type:null,H=E==="tableHead"||E==="tableRow"?_:p;return H===_&&r.parser.lazy[r.now().line]?i(e):H(e)}function p(e){return t.enter("tableHead"),t.enter("tableRow"),y(e)}function y(e){return e===124||(u=!0,a+=1),m(e)}function m(e){return e===null?i(e):(0,f.Ch)(e)?a>1?(a=0,r.interrupt=!0,t.exit("tableRow"),t.enter("lineEnding"),t.consume(e),t.exit("lineEnding"),w):i(e):(0,f.xz)(e)?(0,o.f)(t,m,"whitespace")(e):(a+=1,u&&(u=!1,l+=1),e===124?(t.enter("tableCellDivider"),t.consume(e),t.exit("tableCellDivider"),u=!0,m):(t.enter("data"),b(e)))}function b(e){return e===null||e===124||(0,f.z3)(e)?(t.exit("data"),m(e)):(t.consume(e),e===92?h:b)}function h(e){return e===92||e===124?(t.consume(e),b):b(e)}function w(e){return r.interrupt=!1,r.parser.lazy[r.now().line]?i(e):(t.enter("tableDelimiterRow"),u=!1,(0,f.xz)(e)?(0,o.f)(t,s,"linePrefix",r.parser.constructs.disable.null.includes("codeIndented")?void 0:4)(e):s(e))}function s(e){return e===45||e===58?O(e):e===124?(u=!0,t.enter("tableCellDivider"),t.consume(e),t.exit("tableCellDivider"),z):g(e)}function z(e){return(0,f.xz)(e)?(0,o.f)(t,O,"whitespace")(e):O(e)}function O(e){return e===58?(a+=1,u=!0,t.enter("tableDelimiterMarker"),t.consume(e),t.exit("tableDelimiterMarker"),A):e===45?(a+=1,A(e)):e===null||(0,f.Ch)(e)?T(e):g(e)}function A(e){return e===45?(t.enter("tableDelimiterFiller"),B(e)):g(e)}function B(e){return e===45?(t.consume(e),B):e===58?(u=!0,t.exit("tableDelimiterFiller"),t.enter("tableDelimiterMarker"),t.consume(e),t.exit("tableDelimiterMarker"),F):(t.exit("tableDelimiterFiller"),F(e))}function F(e){return(0,f.xz)(e)?(0,o.f)(t,T,"whitespace")(e):T(e)}function T(e){return e===124?s(e):e===null||(0,f.Ch)(e)?!u||l!==a?g(e):(t.exit("tableDelimiterRow"),t.exit("tableHead"),n(e)):g(e)}function g(e){return i(e)}function _(e){return t.enter("tableRow"),v(e)}function v(e){return e===124?(t.enter("tableCellDivider"),t.consume(e),t.exit("tableCellDivider"),v):e===null||(0,f.Ch)(e)?(t.exit("tableRow"),n(e)):(0,f.xz)(e)?(0,o.f)(t,v,"whitespace")(e):(t.enter("data"),C(e))}function C(e){return e===null||e===124||(0,f.z3)(e)?(t.exit("data"),v(e)):(t.consume(e),e===92?J:C)}function J(e){return e===92||e===124?(t.consume(e),C):C(e)}}function G(t,n){let i=-1,r=!0,l=0,a=[0,0,0,0],u=[0,0,0,0],D=!1,p=0,y,m,b;const h=new S;for(;++i<t.length;){const w=t[i],s=w[1];w[0]==="enter"?s.type==="tableHead"?(D=!1,p!==0&&(x(h,n,p,y,m),m=void 0,p=0),y={type:"table",start:Object.assign({},s.start),end:Object.assign({},s.end)},h.add(i,0,[["enter",y,n]])):s.type==="tableRow"||s.type==="tableDelimiterRow"?(r=!0,b=void 0,a=[0,0,0,0],u=[0,i+1,0,0],D&&(D=!1,m={type:"tableBody",start:Object.assign({},s.start),end:Object.assign({},s.end)},h.add(i,0,[["enter",m,n]])),l=s.type==="tableDelimiterRow"?2:m?3:1):l&&(s.type==="data"||s.type==="tableDelimiterMarker"||s.type==="tableDelimiterFiller")?(r=!1,u[2]===0&&(a[1]!==0&&(u[0]=u[1],b=k(h,n,a,l,void 0,b),a=[0,0,0,0]),u[2]=i)):s.type==="tableCellDivider"&&(r?r=!1:(a[1]!==0&&(u[0]=u[1],b=k(h,n,a,l,void 0,b)),a=u,u=[a[1],i,0,0])):s.type==="tableHead"?(D=!0,p=i):s.type==="tableRow"||s.type==="tableDelimiterRow"?(p=i,a[1]!==0?(u[0]=u[1],b=k(h,n,a,l,i,b)):u[1]!==0&&(b=k(h,n,u,l,i,b)),l=0):l&&(s.type==="data"||s.type==="tableDelimiterMarker"||s.type==="tableDelimiterFiller")&&(u[3]=i)}for(p!==0&&x(h,n,p,y,m),h.consume(n.events),i=-1;++i<n.events.length;){const w=n.events[i];w[0]==="enter"&&w[1].type==="table"&&(w[1]._align=N(n.events,i))}return t}function k(t,n,i,r,l,a){const u=r===1?"tableHeader":r===2?"tableDelimiter":"tableData",D="tableContent";i[0]!==0&&(a.end=Object.assign({},d(n.events,i[0])),t.add(i[0],0,[["exit",a,n]]));const p=d(n.events,i[1]);if(a={type:u,start:Object.assign({},p),end:Object.assign({},p)},t.add(i[1],0,[["enter",a,n]]),i[2]!==0){const y=d(n.events,i[2]),m=d(n.events,i[3]),b={type:D,start:Object.assign({},y),end:Object.assign({},m)};if(t.add(i[2],0,[["enter",b,n]]),r!==2){const h=n.events[i[2]],w=n.events[i[3]];if(h[1].end=Object.assign({},w[1].end),h[1].type="chunkText",h[1].contentType="text",i[3]>i[2]+1){const s=i[2]+1,z=i[3]-i[2]-1;t.add(s,z,[])}}t.add(i[3]+1,0,[["exit",b,n]])}return l!==void 0&&(a.end=Object.assign({},d(n.events,l)),t.add(l,0,[["exit",a,n]]),a=void 0),a}function x(t,n,i,r,l){const a=[],u=d(n.events,i);l&&(l.end=Object.assign({},u),a.push(["exit",l,n])),r.end=Object.assign({},u),a.push(["exit",r,n]),t.add(i+1,0,a)}function d(t,n){const i=t[n],r=i[0]==="enter"?"start":"end";return i[1][r]}}}]);
